name: Publish packages

on:
  workflow_run:
    workflows: ['Version Packages']
    types:
      - completed

jobs:
  publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.CX_RELEASE_APP_ID }}
          private-key: ${{ secrets.CX_RELEASE_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.head_ref }}
          persist-credentials: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.0'

      - name: Configure Git
        run: |
          git config --global user.name "carlsberg-release-app[bot]"
          git config --global user.email "carlsberg-release-app[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Set npm registry and authentication
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > .npmrc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          if [ -e yarn.lock ]; then
            yarn install
          elif [ -e package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: Stash .npmrc changes
        run: git stash push --keep-index --message "Stashing .npmrc changes"
        continue-on-error: true

      - run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi

      - run: npx lerna run build
      - run: npx lerna publish from-package --yes
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Unstash .npmrc changes
        if: failure()
        run: git stash pop
