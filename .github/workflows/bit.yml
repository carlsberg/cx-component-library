name: Bit Deploy

on:
  push:
    branches: [main]

jobs:
  tests-run:
    name: 'Run Unit Tests'
    runs-on: ubuntu-latest
    env:
      BIT_TOKEN: ${{ secrets.BIT_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '16'

      - id: token
        name: Token
        uses: getsentry/action-github-app-token@v1
        with:
          app_id: ${{ secrets.CX_RELEASE_APP_ID }}
          private_key: '${{ secrets.CX_RELEASE_APP_PRIVATE_KEY }}'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

      - name: Register remote scopes
        run: |
          echo "Adding bit.dev to npm registry"
          npm config set @bit:registry https://node.bit.dev
          npm config set @carlsberggroup:registry=https://node.bit.dev
          npm config set @teambit:registry=https://node.bit.dev
          npm config set //node.bit.dev/:_authToken ${BIT_TOKEN}
          echo "Completed adding bit.dev to npm registry"
        env:
          BIT_TOKEN: ${{ secrets.BIT_TOKEN }}

      - name: Run Unit Tests
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          npx @teambit/bvm install
          export PATH=$HOME/bin:$PATH
          echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc && source ~/.bashrc
          bit config set user.token ${BIT_TOKEN}
          bit install
          bit compile
          bit tag
          bit export
        shell: bash
        env:
          BIT_TOKEN: ${{ secrets.BIT_TOKEN }}

      - name: Create Pull Request
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          gh pr create --fill --base main --head release
          gh pr merge --rebase --admin --delete-branch
          git push origin --delete release || true
        shell: bash
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
