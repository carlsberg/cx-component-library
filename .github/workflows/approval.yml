name: Approval

on:
  pull_request:
    branches: [main]
  pull_request_review:

jobs:
  require_approval:
    name: Require Approval
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.head.ref, 'feature/') || startsWith(github.event.pull_request.head.ref, 'ci/')
    steps:
      - id: token
        name: Authenticate
        uses: getsentry/action-github-app-token@v1
        with:
          app_id: ${{ secrets.CARLSBERG_SECURITY_APP_ID }}
          private_key: "${{ secrets.CARLSBERG_SECURITY_APP_PRIVATE_KEY }}"

      - id: check
        name: Check Reviewers
        run: |
          approved=0
          team="malty-designers"

          gh api "/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews" \
          | jq -cr '.[] | (.user.login + " " + .state)' > reviews.json

          cat reviews.json

          for review in "$(cat reviews.json)"; do
              user="$(echo $review | awk '{print $1}')"
              state="$(echo $review | awk '{print $2}')"

              (gh api "/orgs/${{ github.repository_owner }}/teams/$team/memberships/$user" &>/dev/null) && true
              resp_code=$?

              printf "checking %s: %s" "$user" "$state"

              if [[ $resp_code -eq 0 && "$state" == "APPROVED" ]]; then
                  echo " - belongs to $team\n"
                  approved=1
                  break
              else
                  echo " - doesn't belong to $team\n"
              fi
          done

          echo "::set-output name=approved=$approved"
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}

      - name: Create Check
        run: |
          conclusion="failure"

          if [[ "${{ steps.check.outputs.approved }}" == "1" ]]; then
              conclusion="success"
          fi

          cat > check.json <<- EOF
          {
            "name": "approval-workflow",
            "head_sha": "${{ github.event.pull_request.head.sha }}",
            "status": "completed",
            "conclusion": "$conclusion",
            "output": {
              "title": "Waiting designer approval",
              "summary": "Feature pull requests require an approval from a designer"
            }
          }
          EOF

          gh api "repos/${{ github.repository }}/check-runs" --input check.json
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
