name: Unit Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  tests-run:
    name: 'Run Unit Tests'
    runs-on: ubuntu-latest
    env:
      BIT_TOKEN: ${{ secrets.BIT_TOKEN }}
      BIT_VERSION: ${{ secrets.BIT_VERSION }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Bit CLI
        run: |
          npm i -g @teambit/bvm
          bvm install ${BIT_VERSION}
        env:
          BIT_VERSION: ${{ secrets.BIT_VERSION }}

      - name: Add bvm bin folder to path
        run: |
          echo "$HOME/bin" >> $GITHUB_PATH
          echo "PATH=$HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Set up bit config
        run: |
          echo "Adding bit.dev to npm registry"
          export PATH=${{ env.PATH }}
          npm config set @bit:registry https://node.bit.dev
          npm config set @carlsberggroup:registry=https://node.bit.dev
          npm config set @teambit:registry=https://node.bit.dev
          bit config set analytics_reporting false
          bit config set anonymous_reporting false
          bit config set user.token ${BIT_TOKEN}
          echo "Completed adding bit.dev to npm registry"
        env:
          BIT_CONFIG_USER_TOKEN: ${{ secrets.BIT_TOKEN }}
          BIT_TOKEN: ${{ secrets.BIT_TOKEN }}

      - name: Bit Deps Install & Compile
        run: |
          export PATH=${{ env.PATH }}
          yarn cache clean --force
          bit clear-cache
          bit install
          bit compile
        shell: bash

      - name: Format workspace.jsonc
        run: |
          yarn prettier --write workspace.jsonc
        shell: bash

      - name: Run Check Lint
        run: |
          yarn check-lint
        shell: bash

      - name: Run Check Types
        run: |
          yarn check-types
        shell: bash

      - name: Run Check Format
        run: |
          yarn check-format
        shell: bash

      - name: Run Unit Tests
        run: |
          yarn test:ci
        shell: bash

      - name: Upload coverage report
        uses: codecov/codecov-action@v4-beta
        env:
          CODECOV_TOKEN: ${{ secrets.codecov-token }}
